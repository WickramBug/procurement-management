/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package purchase.order.system.SiteManager;

import purchase.order.system.*;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import purchase.order.system.Public.ButtonRenderer;

/**
 *
 * @author User
 */
public class ViewPurchaseRequisition extends javax.swing.JInternalFrame {

    /**
     * Creates new form PurchaseRequsition
     */
    private DefaultTableModel table;
    private ResultSet rs;
    private PurchaseRequsitionModel prm;
    private PurchaseRequisitionController prc;
    private ViewSingleRequisition vs;
    private String user;

    public ViewPurchaseRequisition() {
        initComponents();    
    }
    
    public ViewPurchaseRequisition(String user) {
        initComponents();
        this.user=user;
        prm = new PurchaseRequsitionModel();
        prc = new PurchaseRequisitionController();
        table = (DefaultTableModel) tableRequsition.getModel();

        requsitionTableLoad();
    }
    
    /**
     * This method is used to fill the table with requisition items that have Pending status.
     */
    public void requsitionTableLoad() {

        rs = prc.getRequisitionDetails(user);

        DefaultTableModel tableModel = (DefaultTableModel) DbUtils.resultSetToTableModel(rs);
        tableModel.addColumn("VIEW");
        tableModel.addColumn("DELETE");

        tableRequsition.setModel(tableModel);
        tableRequsition.getColumn("VIEW").setCellRenderer(new ButtonRenderer("VIEW"));
        tableRequsition.getColumn("DELETE").setCellRenderer(new ButtonRenderer("DELETE"));
        setTableHeaderColor();

    }

    private void setTableHeaderColor() {

        JTableHeader th = tableRequsition.getTableHeader();

        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc1 = tcm.getColumn(0);
        TableColumn tc2 = tcm.getColumn(1);
        TableColumn tc3 = tcm.getColumn(2);
        TableColumn tc4 = tcm.getColumn(3);
        TableColumn tc5 = tcm.getColumn(4);
        TableColumn tc6 = tcm.getColumn(5);

        tc1.setHeaderRenderer(new headerCellRenderer());
        tc2.setHeaderRenderer(new headerCellRenderer());
        tc3.setHeaderRenderer(new headerCellRenderer());
        tc4.setHeaderRenderer(new headerCellRenderer());
        tc5.setHeaderRenderer(new headerCellRenderer());
        tc6.setHeaderRenderer(new headerCellRenderer());
    }

    class headerCellRenderer extends DefaultTableCellRenderer {

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, 0, 3);
            c.setBackground(new Color(47, 6, 152));
            c.setForeground(Color.white);

            return c;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRequsition = new javax.swing.JTable();

        setBorder(null);
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(780, 575));

        jPanel1.setPreferredSize(new java.awt.Dimension(777, 558));

        jPanel2.setBackground(new java.awt.Color(95, 53, 174));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("VIEW REQUISITIONS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tableRequsition.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableRequsition.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tableRequsition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REQ. NO", "APPLIED DATE", "REQ. DATE", "STATUS", "VIEW", "DELETE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRequsition.setGridColor(new java.awt.Color(0, 0, 0));
        tableRequsition.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableRequsition.setRowHeight(25);
        tableRequsition.setSelectionBackground(new java.awt.Color(95, 53, 174));
        tableRequsition.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRequsitionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRequsition);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableRequsitionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRequsitionMouseClicked
        // TODO add your handling code here:
        int row = tableRequsition.rowAtPoint(evt.getPoint());
        int col = tableRequsition.columnAtPoint(evt.getPoint());
        String status = tableRequsition.getValueAt(row, 3).toString();

        if (col == 4) {
            try{
            vs = new ViewSingleRequisition(Integer.parseInt(tableRequsition.getValueAt(row, 0).toString().substring(5)));
            }catch(NumberFormatException ex){
                return;
            }
            vs.setVisible(true);           
        } else if (col == 5) {
            if ((status.equals("Delivered")) || (status.equals("Declined"))) {
                int response = JOptionPane.showConfirmDialog(null, "Do you really want to Delete the selected Requisition");
                if (response == 0) {
                    deleteRequisition(Integer.parseInt(tableRequsition.getValueAt(row, 0).toString().substring(5)),status);
                    requsitionTableLoad();
                }
            } else {

                JOptionPane.showMessageDialog(null, "You cannot delete the selected Requsition until Approved and Goods are sent, Approval pending");
            }
        }
    }//GEN-LAST:event_tableRequsitionMouseClicked

    private void deleteRequisition(int reqNo,String status){
        
        prc.deleteRequisition(reqNo);
        if(status.equals("Delivered"))
        prc.deleteDeliveredRequisition(reqNo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRequsition;
    // End of variables declaration//GEN-END:variables
}
