/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package purchase.order.system.SiteManager;

import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import purchase.order.system.Public.ButtonRenderer;
import purchase.order.system.Public.DBConn;
import purchase.order.system.Public.FrameDrag;

/**
 *
 * @author User
 */
public class UpdateReceivedGoods extends javax.swing.JFrame {

    /**
     * Creates new form ViewSingleRequisition
     */
    private int reqNo;
    private PurchaseRequisitionController pr;
    private DefaultTableModel table;
    private FrameDrag frameDragListener;
    GoodsReceivedDBUtils dBUtils = new GoodsReceivedDBUtils();
    ResultSet requisition;
    ResultSet requisitionItems;
    ResultSet itemsDetails;

    public UpdateReceivedGoods() {
        initComponents();
        table = (DefaultTableModel) tableUpdateReceivedGoods.getModel();
        pr = new PurchaseRequisitionController();
        frameDragListener = new FrameDrag(this);
        frameDragListener.mouseDrag();
    }

    public UpdateReceivedGoods(int reqNo) {
        initComponents();
        this.reqNo = reqNo;
        table = (DefaultTableModel) tableUpdateReceivedGoods.getModel();
        pr = new PurchaseRequisitionController();
        frameDragListener = new FrameDrag(this);
        frameDragListener.mouseDrag();
        setRequisitionData();
        requsitionTableLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUpdateReceivedGoods = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblReqNo = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblReqDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(777, 558));

        jPanel2.setBackground(new java.awt.Color(95, 53, 174));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText(" GOOD RECEIVED NOTE");

        jLabel9.setBackground(new java.awt.Color(23, 2, 74));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(23, 2, 74));
        jLabel9.setText("X");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jLabel9)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("TOTAL");

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTotal.setText("0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(lblTotal)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblTotal))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        txtComments.setColumns(20);
        txtComments.setRows(5);
        jScrollPane2.setViewportView(txtComments);

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Comments or Special Instructions");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(95, 53, 174));
        jLabel8.setText("PURCHASE REQUSITION");

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tableUpdateReceivedGoods.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableUpdateReceivedGoods.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tableUpdateReceivedGoods.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEMID", "ORDEREDQUANTITY", "DELIVERED", "DAMAGED", "UPDATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUpdateReceivedGoods.setGridColor(new java.awt.Color(0, 0, 0));
        tableUpdateReceivedGoods.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableUpdateReceivedGoods.setRowHeight(25);
        tableUpdateReceivedGoods.setSelectionBackground(new java.awt.Color(95, 53, 174));
        tableUpdateReceivedGoods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUpdateReceivedGoodsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUpdateReceivedGoods);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("DATE");

        lblReqNo.setBackground(new java.awt.Color(102, 102, 102));
        lblReqNo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblReqNo.setForeground(new java.awt.Color(95, 53, 174));

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        lblDate.setText("jLabel2");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("REQUIRED DATE");

        lblReqDate.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        lblReqDate.setText("jLabel2");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(lblReqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(lblReqNo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblReqNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(lblReqDate))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setRequisitionData() {

        requisition = pr.getSingleRequisitionDetail(reqNo);

        try {
            if (requisition.next()) {
                lblReqNo.setText(Integer.toString(reqNo));
                lblDate.setText(requisition.getString("APPLIED DATE"));
                lblReqDate.setText(requisition.getString("REQ.DATE"));
                txtComments.setText(requisition.getString("COMMENT"));
                lblTotal.setText(Double.toString(requisition.getDouble("TOTAL")));
            }
        } catch (SQLException ex) {
            System.out.println(ex);
            Logger.getLogger(UpdateReceivedGoods.class.getName()).log(Level.SEVERE, null, ex);

        } catch (Exception ex) {
            System.out.println(ex);
            Logger.getLogger(UpdateReceivedGoods.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void requsitionTableLoad() {
        try (Connection dbConnection = DBConn.myConn()) {
            requisitionItems = dbConnection.createStatement().executeQuery("select ItemId as ITEMID   , OrderQuantity as ORDEREDQUANTITY ,DeliveredQuantity as DELIVERED ,DamagedQuantity as DAMAGED from requisitionitems where RequisitionNo='" + reqNo + "' and Status='Pending' ");
            DefaultTableModel tableModel = (DefaultTableModel) DbUtils.resultSetToTableModel(requisitionItems);
            tableModel.addColumn("UPDATE");
            tableUpdateReceivedGoods.setModel(tableModel);
            tableUpdateReceivedGoods.getColumn("UPDATE").setCellRenderer(new ButtonRenderer("UPDATE"));
            setTableHeaderColor();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    private void setTableHeaderColor() {

        JTableHeader th = tableUpdateReceivedGoods.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc1 = tcm.getColumn(0);
        TableColumn tc2 = tcm.getColumn(1);
        TableColumn tc3 = tcm.getColumn(2);
        TableColumn tc4 = tcm.getColumn(3);
        TableColumn tc5 = tcm.getColumn(4);
        tc1.setHeaderRenderer(new headerCellRenderer());
        tc2.setHeaderRenderer(new headerCellRenderer());
        tc3.setHeaderRenderer(new headerCellRenderer());
        tc4.setHeaderRenderer(new headerCellRenderer());
        tc5.setHeaderRenderer(new headerCellRenderer());
    }

    class headerCellRenderer extends DefaultTableCellRenderer {

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, 0, 3);
            c.setBackground(new Color(47, 6, 152));
            c.setForeground(Color.white);
            return c;
        }

    }

    private void tableUpdateReceivedGoodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUpdateReceivedGoodsMouseClicked
        int row = tableUpdateReceivedGoods.rowAtPoint(evt.getPoint());
        int col = tableUpdateReceivedGoods.columnAtPoint(evt.getPoint());
        if (col == 4) {
            if (tableUpdateReceivedGoods.getValueAt(row, 2) != null && dBUtils.checkNull(tableUpdateReceivedGoods.getValueAt(row, 2).toString())) {
                if (dBUtils.checkPostive(Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 2).toString())) && dBUtils.checkPostive(Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 3).toString()))) {

                    if (Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 2).toString()) > Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 1).toString())) {
                        JOptionPane.showMessageDialog(null, "Deliverd Quantity can not be greater than Ordered Quantity");
                    } else {
                        RequesitionItems requesitionItems = new RequesitionItems();
                        requesitionItems.setRewuesitionNo(reqNo);
                        requesitionItems.setItemNo(Integer.parseInt(tableUpdateReceivedGoods.getValueAt(row, 0).toString()));
                        requesitionItems.setOrderedQuantity(Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 1).toString()));
                        requesitionItems.setDeliveredQuantity(Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 2).toString()));
                        if (Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 1).toString()) == Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 2).toString())) {
                            requesitionItems.setStatus("Received");
                        } else {
                            requesitionItems.setStatus("Pending");
                        }
                        if (tableUpdateReceivedGoods.getValueAt(row, 3) != null && dBUtils.checkNull(tableUpdateReceivedGoods.getValueAt(row, 3).toString())) {

                            requesitionItems.setDamagedQuantity(Double.parseDouble(tableUpdateReceivedGoods.getValueAt(row, 3).toString()));
                            if (dBUtils.updateGoodReceiveDetail(requesitionItems)) {
                                JOptionPane.showMessageDialog(null, "Recorde Updated Successfully");
                                if (requesitionItems.getDamagedQuantity() > 0) {
                                    dBUtils.notifySupplier(requesitionItems);
                                }
                            }

                        }
                        requsitionTableLoad();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please Insert positive values for quantites");

                }
            } else {
                JOptionPane.showMessageDialog(null, "Deliverd Quantity can not be empty");

            }

        }


    }//GEN-LAST:event_tableUpdateReceivedGoodsMouseClicked

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel9MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateReceivedGoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateReceivedGoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateReceivedGoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateReceivedGoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateReceivedGoods().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblReqDate;
    private javax.swing.JLabel lblReqNo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tableUpdateReceivedGoods;
    private javax.swing.JTextArea txtComments;
    // End of variables declaration//GEN-END:variables
}
